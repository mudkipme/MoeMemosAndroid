plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.protobuf' version '0.9.4'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.compose'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "me.mudkip.moememos"
        minSdk 26
        targetSdk 34
        versionCode 30
        versionName "0.8.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            crunchPngs false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }

    namespace 'me.mudkip.moememos'
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.material3:material3:$material3"
    implementation "androidx.compose.material3.adaptive:adaptive:1.0.0-beta04"
    implementation "androidx.compose.material3.adaptive:adaptive-layout:1.0.0-beta04"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.4'
    implementation 'androidx.activity:activity-compose:1.9.1'
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.paging:paging-compose:$paging_version"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version"
    implementation "com.squareup.moshi:moshi:$moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"
    implementation "com.github.skydoves:sandwich:$sandwich"
    implementation "com.github.skydoves:sandwich-retrofit:$sandwich"
    implementation "com.github.skydoves:sandwich-retrofit-serialization:$sandwich"
    implementation "io.coil-kt:coil-compose:2.6.0"
    implementation "org.jetbrains:markdown:0.7.0"

    implementation "com.google.dagger:hilt-android:2.51.1"
    kapt "com.google.dagger:hilt-compiler:2.51.1"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"

    implementation "androidx.datastore:datastore:$datastore"
    implementation "com.google.protobuf:protobuf-javalite:4.26.1"
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation 'net.swiftzer.semver:semver:2.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:4.26.1"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
